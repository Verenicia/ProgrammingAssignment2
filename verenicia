## Almacenamiento en caché de la inversa de una matriz: 
## La inversión de matriz suele ser un cálculo costoso y puede haber algún 
beneficio ## para almacenar en caché la inversa de una matriz en lugar de calcularla repetidamente. 
## A continuación hay un par de funciones que se utilizan para crear un objeto especial que 
## almacena una matriz y almacena en caché su inverso.

## Esta función crea un objeto especial "matriz" que puede almacenar en caché su inverso.

makeCacheMatrix <- function ( x = matrix ()) {
         inv <- NULL set <- function ( y ) {                 x << - y                 inv << - NULL         } get <- function () x         setInverse <- function ( inverse ) inv << - inversa         getInverse <- función () inv         lista ( set = set , get = get
        



        



             , 
             setInverse = setInverse, 
             getInverse = getInverse) 
}


## Esta función calcula el inverso de la "matriz" especial creada por 
## makeCacheMatrix arriba. Si el inverso ya se ha calculado (y la 
matriz ## no ha cambiado), entonces debería recuperar el inverso del caché.

cacheSolve <- function ( x , ...) { ## Devuelve una matriz que es la inversa de 'x'         inv <- x $ getInverse () if (! is. null (inv)) {                 message ( "obtener datos en caché " ) return (inv)         }         mat <- x $ get ()         inv <- solve (mat, ...)         x $ setInverse (inv)         inv }
